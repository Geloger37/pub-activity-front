{"version":3,"sources":["components/Navigation.js","components/Thesaurus/Institute/Institute.js","components/Thesaurus/Cathedra/data.js","components/Thesaurus/Cathedra/Cathedra.js","components/Thesaurus/Degree/data.js","components/Thesaurus/Degree/Degree.js","components/Thesaurus/Employees/data.js","components/Thesaurus/Post/data.js","components/Thesaurus/Employees/Employees.js","components/Thesaurus/Post/Post.js","components/Thesaurus/Title/data.js","components/Thesaurus/Title/Title.js","components/Index/IndexCathedra/data.js","components/Index/IndexCathedra/IndexCathedra.js","components/Index/IndexEmployees/data.js","components/Index/IndexEmployees/IndexEmployees.js","components/Index/IndexInstitute/data.js","components/Index/IndexInstitute/IndexInstitute.js","components/Add/Existing/data.js","components/Add/Existing/Existing.js","components/Add/New/data.js","components/Add/New/New.js","App.js","index.js"],"names":["Navigation","expand","light","bg","Brand","href","Toggler","target","navbar","id","Nav","mr","Item","dropdown","Link","dropdownToggle","Menu","to","Component","Institute","style","margin","width","marginTop","textAlign","marginBottom","dataSource","DataSource","key","loadMode","load","axios","get","then","res","JSON","stringify","data","keyExpr","showBorders","onInitNewRow","this","remoteOperations","enabled","mode","allowUpdating","allowDeleting","allowAdding","useIcons","dataField","caption","visible","cathedra","institute","Cathedra","allowColumnReordering","onEditingStart","onRowInserting","onRowInserted","onRowUpdating","onRowUpdated","onRowRemoving","onRowRemoved","valueExpr","displayExpr","degrees","Degree","employees","cathedras","titles","post","Employees","Post","Title","indexCathedra","IndexCathedra","props","service","applyFilterTypes","name","saleAmountHeaderFilter","text","value","state","showFilterRow","showHeaderFilter","currentFilter","dataGrid","orderHeaderFilter","bind","onShowFilterRowChanged","onShowHeaderFilterChanged","onCurrentFilterChanged","postProcess","results","push","e","setState","clearFilter","instance","applyFilter","alignment","indexEmp","IndexEmployees","indexEmployees","indexInst","IndexInstitute","indexInstitue","addExisting","Existing","title","showTitle","height","my","at","of","window","itemType","colCount","colSpan","addNew","New","App","path","component","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6b2407e.chunk.js","sourcesContent":["import {Collapse, Dropdown, Nav, Navbar} from \"bootstrap-4-react\";\nimport React,{Component} from \"react\";\nimport {NavLink} from 'react-router-dom'\n\nexport default class Navigation extends Component{\n    render() {\n        return (\n            <Navbar expand=\"lg\" light bg=\"light\">\n                <Navbar.Brand href=\"#\">\n                    Система учета публикационной активности ППС ИРНИТУ\n                </Navbar.Brand>\n                <Navbar.Toggler target=\"#navbarSupportedContent\" />\n                <Collapse navbar id=\"navbarSupportedContent\">\n                    <Navbar.Nav mr=\"auto\">\n\n                        <Nav.Item dropdown>\n                            <Nav.Link dropdownToggle>Просмотр индексов</Nav.Link>\n                            <Dropdown.Menu>\n                                <Dropdown.Item>\n                                    <NavLink to=\"/index/indexemployees\">Индвидуальные</NavLink>\n                                </Dropdown.Item>\n                                <Dropdown.Item>\n                                    <NavLink to=\"/index/indexinstitute\">По институтам</NavLink>\n                                </Dropdown.Item>\n                                <Dropdown.Item>\n                                    <NavLink to=\"/index/indexcathedra\">По кафедрам</NavLink>\n                                </Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Nav.Item>\n\n                        <Nav.Item dropdown>\n                            <Nav.Link dropdownToggle>Добавить показатели</Nav.Link>\n                            <Dropdown.Menu>\n                                <Dropdown.Item>\n                                    <NavLink to=\"/add/new\">Новые</NavLink>\n                                </Dropdown.Item>\n                                <Dropdown.Item>\n                                    <NavLink to=\"/add/existing\">Существующий</NavLink>\n                                </Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Nav.Item>\n\n                        <Nav.Item dropdown>\n                            <Nav.Link dropdownToggle>Справочники</Nav.Link>\n                            <Dropdown.Menu>\n                                <Dropdown.Item>\n                                    <NavLink to=\"/thesaurus/institute\">Институты</NavLink>\n                                </Dropdown.Item>\n                                <Dropdown.Item>\n                                    <NavLink to=\"/thesaurus/cathedra\">Кафедры</NavLink>\n                                </Dropdown.Item>\n                                <Dropdown.Item>\n                                    <NavLink to=\"/thesaurus/degree\">Ученые степени</NavLink>\n                                </Dropdown.Item>\n                                <Dropdown.Item>\n                                    <NavLink to=\"/thesaurus/title\">Ученые звания</NavLink>\n                                </Dropdown.Item>\n                                <Dropdown.Item>\n                                    <NavLink to=\"/thesaurus/post\">Должности</NavLink>\n                                </Dropdown.Item>\n                                <Dropdown.Item>\n                                    <NavLink to=\"/thesaurus/employees\">Сотрудники</NavLink>\n                                </Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Nav.Item>\n                    </Navbar.Nav>\n                </Collapse>\n            </Navbar>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport DataGrid, { Column, Editing, Paging } from 'devextreme-react/data-grid'\nimport DataSource from 'devextreme/data/data_source'\nimport axios from 'axios'\n\n\nexport default class Institute extends Component {\n  render () {\n    return (\n      <div style={{ margin: 'auto', width: '60%', marginTop: '100px' }}>\n        <h1 style={{ textAlign: 'center', marginBottom: '30px' }}>Институты</h1>\n        <DataGrid\n          id='gridContainer'\n          dataSource= {new DataSource(\n            {\n              key: 'idInstitute',\n              loadMode: 'processed',\n              load : function () {\n                axios.get('http://localhost:3002/institute').then(res => { JSON.stringify(res.data)});\n              }\n            }\n          )}\n          keyExpr=\"idInstitute\"\n          //allowColumnReordering\n          showBorders\n          //onEditingStart={this.onEditingStart}\n          onInitNewRow={this.onInitNewRow}\n          //onRowInserting={this.onRowInserting}\n          //onRowInserted={this.onRowInserted}\n          //onRowUpdating={this.onRowUpdating}\n          //onRowUpdated={this.onRowUpdated}\n          //onRowRemoving={this.onRowRemoving}\n          //onRowRemoved={this.onRowRemoved}\n          remoteOperations\n        >\n\n          <Paging enabled />\n          <Editing\n                mode='row'\n                allowUpdating\n                allowDeleting\n                allowAdding\n                useIcons\n              />\n\n          <Column dataField='idInstitute' caption='ID' width={50} visible={false} />\n          <Column dataField='nameInstitute' caption='Название института' />\n\n        </DataGrid>\n\n      </div>\n    )\n  }\n  /*onRowUpdating(e) {\n    console.log('Hello')\n    axios.get('localhost:3002/institute')\n          .then(res => {\n            institute = res.data;\n            console.log(institute);\n          })\n  }*/\n}\n","export const cathedra = [{\n    'ID': 1,\n    'CathedraName': 'Кафедра Металлургии цветных металлов',\n    'InstituteID': 1\n}, {\n    'ID': 2,\n    'CathedraName': 'Кафедра вычислительной техники',\n    'InstituteID': 2\n}, {\n    'ID': 3,\n    'CathedraName': 'Кафедра Химических технологий',\n    'InstituteID': 1\n}, {\n    'ID': 4,\n    'CathedraName': 'Отделение общефизической подготовки',\n    'InstituteID': 3\n}, {\n    'ID': 5,\n    'CathedraName': 'Кафедра Автоматизированных систем',\n    'InstituteID': 2\n}, {\n    'ID': 6,\n    'CathedraName': 'Кафедра Информационной безопасности',\n    'InstituteID': 2\n}, {\n    'ID': 7,\n    'CathedraName': 'Отделение женской гимнастики',\n    'InstituteID': 3\n}];\n\nexport const institute = [{\n    'ID': 1,\n    'InstituteName': 'Институт высоких технологий'\n}, {\n    'ID': 2,\n    'InstituteName': 'Институт информационных технологий и анализа данных'\n}, {\n    'ID': 3,\n    'InstituteName': 'Кафедра физической культуры'\n}\n\n]\n\n","import React, {Component} from 'react'\nimport DataGrid, {Column, Editing, Lookup, Paging} from \"devextreme-react/data-grid\";\n\nimport {cathedra, institute} from \"./data\";\n\nexport default class Cathedra extends Component {\n    render() {\n        return (\n            <div style={{margin: \"auto\", width: \"60%\", marginTop: \"100px\"}}>\n                <h1 style={{textAlign: \"center\", marginBottom: \"30px\"}}>Кафедры</h1>\n                <DataGrid\n                    id={'gridContainer'}\n                    dataSource={cathedra}\n                    keyExpr={'ID'}\n                    allowColumnReordering={true}\n                    showBorders={true}\n                    onEditingStart={this.onEditingStart}\n                    onInitNewRow={this.onInitNewRow}\n                    onRowInserting={this.onRowInserting}\n                    onRowInserted={this.onRowInserted}\n                    onRowUpdating={this.onRowUpdating}\n                    onRowUpdated={this.onRowUpdated}\n                    onRowRemoving={this.onRowRemoving}\n                    onRowRemoved={this.onRowRemoved}>\n\n                    <Paging enabled={true}/>\n                    <Editing\n                        mode={'row'}\n                        allowUpdating={true}\n                        allowDeleting={true}\n                        allowAdding={true}\n                        useIcons={true}/>\n\n                    <Column dataField={'ID'} caption={'ID'} width={50} visible={false}/>\n                    <Column dataField={'CathedraName'} caption={'Название Кафедры'}/>\n                    <Column dataField={'InstituteID'} caption={'Название инстиута'}>\n                        <Lookup dataSource={institute} valueExpr={'ID'} displayExpr={'InstituteName'}/>\n                    </Column>\n\n                </DataGrid>\n            </div>\n        )\n    }\n}","export const degrees = [{\n    'id': 1,\n    'degreeName': 'Доктор медицинских наук'\n}, {\n    'id': 2,\n    'degreeName': 'Кандидат технических наук'\n}, {\n    'id': 3,\n    'degreeName': '-'\n}]","import React,{Component} from 'react'\nimport DataGrid, {Column, Editing, Paging} from \"devextreme-react/data-grid\";\n\nimport {degrees} from \"./data\";\n\nexport default class Degree extends Component{\n    render() {\n        return (\n            <div style={{margin: \"auto\", width: \"60%\", marginTop: \"100px\"}}>\n                <h1 style={{textAlign: \"center\", marginBottom: \"30px\"}}>Ученые степени</h1>\n                <DataGrid\n                    id={'gridContainer'}\n                    dataSource={degrees}\n                    keyExpr={'id'}\n                    allowColumnReordering={true}\n                    showBorders={true}\n                    onEditingStart={this.onEditingStart}\n                    onInitNewRow={this.onInitNewRow}\n                    onRowInserting={this.onRowInserting}\n                    onRowInserted={this.onRowInserted}\n                    onRowUpdating={this.onRowUpdating}\n                    onRowUpdated={this.onRowUpdated}\n                    onRowRemoving={this.onRowRemoving}\n                    onRowRemoved={this.onRowRemoved}>\n\n                    <Paging enabled={true}/>\n                    <Editing\n                        mode={'row'}\n                        allowUpdating={true}\n                        allowDeleting={true}\n                        allowAdding={true}\n                        useIcons={true}/>\n\n                    <Column dataField={'id'} caption={'id'} width={50} visible={false}/>\n                    <Column dataField={'degreeName'} caption={'Наименование ученой степени'}/>\n\n                </DataGrid>\n\n            </div>\n        )\n    }\n}","export const employees = [{\n    'id': 1,\n    'FIO': 'Иванов Иван Иванович',\n    'idCathedra': 1,\n    'idDegree': 1,\n    'idTitle': 1,\n    'idPost': 1\n}];\n\nexport const cathedras = [{\n    'id': 1,\n    'cathedraName': 'Кафедра Металлургии цветных металлов'\n}, {\n    'id': 2,\n    'cathedraName': 'Кафедра вычислительной техники'\n}, {\n    'id': 3,\n    'cathedraName': 'Кафедра Химических технологий'\n}, {\n    'id': 4,\n    'cathedraName': 'Отделение общефизической подготовки'\n}, {\n    'id': 5,\n    'cathedraName': 'Кафедра Автоматизированных систем'\n}, {\n    'id': 6,\n    'cathedraName': 'Кафедра Информационной безопасности'\n}, {\n    'id': 7,\n    'cathedraName': 'Отделение женской гимнастики'\n}];\n\nexport const degrees = [{\n    'id': 1,\n    'degreeName': 'Доктор медицинских наук'\n}, {\n    'id': 2,\n    'degreeName': 'Кандидат технических наук'\n}, {\n    'id': 3,\n    'degreeName': '-'\n}];\n\nexport const titles = [{\n    'id': 1,\n    'title': '-'\n}, {\n    'id': 2,\n    'title': 'Доцент'\n}, {\n    'id': 3,\n    'title': 'Профессор'\n}];\n\nexport const posts = [{}];","export const post = [{\n    'id': 1,\n    'postName': 'Старший преподаватель'\n},{\n    'id': 2,\n    'postName': 'Профессор'\n},{\n    'id': 3,\n    'postName': 'Ассистент'\n},\n]","import React, {Component} from 'react'\nimport DataGrid, {Column, Editing, Lookup, Paging} from \"devextreme-react/data-grid\";\n\nimport {cathedras, degrees, employees, titles} from \"./data\";\nimport {post} from \"../Post/data\";\n\nexport default class Employees extends Component {\n    render() {\n        return (\n            <div style={{margin: \"auto\", width: \"60%\", marginTop: \"100px\"}}>\n                <h1 style={{textAlign: \"center\", marginBottom: \"30px\"}}>Сотрудники</h1>\n                <DataGrid\n                    id={'gridContainer'}\n                    dataSource={employees}\n                    keyExpr={'id'}\n                    allowColumnReordering={true}\n                    showBorders={true}\n                    onEditingStart={this.onEditingStart}\n                    onInitNewRow={this.onInitNewRow}\n                    onRowInserting={this.onRowInserting}\n                    onRowInserted={this.onRowInserted}\n                    onRowUpdating={this.onRowUpdating}\n                    onRowUpdated={this.onRowUpdated}\n                    onRowRemoving={this.onRowRemoving}\n                    onRowRemoved={this.onRowRemoved}>\n\n                    <Paging enabled={true}/>\n                    <Editing\n                        mode={'form'}\n                        allowUpdating={true}\n                        allowDeleting={true}\n                        allowAdding={true}\n                        useIcons={true}/>\n\n                    <Column dataField={'id'} caption={'id'} width={50} visible={false}/>\n                    <Column dataField={'FIO'} caption={'ФИО сотрудника'}/>\n                    <Column dataField={'idCathedra'} caption={'Кафедра'}>\n                        <Lookup dataSource={cathedras} valueExpr={'id'} displayExpr={'cathedraName'}/>\n                    </Column>\n                    <Column dataField={'idDegree'} caption={'Ученая степень'}>\n                        <Lookup dataSource={degrees} valueExpr={'id'} displayExpr={'degreeName'}/>\n                    </Column>\n                    <Column dataField={'idTitle'} caption={'Ученое звание'}>\n                        <Lookup dataSource={titles} valueExpr={'id'} displayExpr={'title'}/>\n                    </Column>\n                    <Column dataField={'idPost'} caption={'Должность'}>\n                        <Lookup dataSource={post} valueExpr={'id'} displayExpr={'postName'}/>\n                    </Column>\n                </DataGrid>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react'\nimport DataGrid, {Column, Editing, Paging} from \"devextreme-react/data-grid\";\n\nimport {post} from \"./data\";\n\nexport default class Post extends Component {\n    render() {\n        return (\n            <div style={{margin: \"auto\", width: \"60%\", marginTop: \"100px\"}}>\n                <h1 style={{textAlign: \"center\", marginBottom: \"30px\"}}>Должности</h1>\n                <DataGrid\n                    id={'gridContainer'}\n                    dataSource={post}\n                    keyExpr={'id'}\n                    allowColumnReordering={true}\n                    showBorders={true}\n                    onEditingStart={this.onEditingStart}\n                    onInitNewRow={this.onInitNewRow}\n                    onRowInserting={this.onRowInserting}\n                    onRowInserted={this.onRowInserted}\n                    onRowUpdating={this.onRowUpdating}\n                    onRowUpdated={this.onRowUpdated}\n                    onRowRemoving={this.onRowRemoving}\n                    onRowRemoved={this.onRowRemoved}>\n\n                    <Paging enabled={true}/>\n                    <Editing\n                        mode={'row'}\n                        allowUpdating={true}\n                        allowDeleting={true}\n                        allowAdding={true}\n                        useIcons={true}/>\n\n                    <Column dataField={'id'} caption={'id'} width={50} visible={false}/>\n                    <Column dataField={'postName'} caption={'Наименование должности'}/>\n                </DataGrid>\n            </div>\n        )\n    }\n}","export const titles = [{\n    'id': 1,\n    'title': '-'\n}, {\n    'id': 2,\n    'title': 'Доцент'\n}, {\n    'id': 3,\n    'title': 'Профессор'\n}];","import React, {Component} from 'react'\nimport DataGrid, {Column, Editing, Paging} from \"devextreme-react/data-grid\";\n\nimport {titles} from \"./data\";\n\nexport default class Title extends Component {\n    render() {\n        return (\n            <div style={{margin: \"auto\", width: \"60%\", marginTop: \"100px\"}}>\n                <h1 style={{textAlign: \"center\", marginBottom: \"30px\"}}>Ученые звания</h1>\n\n                <DataGrid\n                    id={'gridContainer'}\n                    dataSource={titles}\n                    keyExpr={'id'}\n                    allowColumnReordering={true}\n                    showBorders={true}\n                    onEditingStart={this.onEditingStart}\n                    onInitNewRow={this.onInitNewRow}\n                    onRowInserting={this.onRowInserting}\n                    onRowInserted={this.onRowInserted}\n                    onRowUpdating={this.onRowUpdating}\n                    onRowUpdated={this.onRowUpdated}\n                    onRowRemoving={this.onRowRemoving}\n                    onRowRemoved={this.onRowRemoved}>\n\n                    <Paging enabled={true}/>\n                    <Editing\n                        mode={'row'}\n                        allowUpdating={true}\n                        allowDeleting={true}\n                        allowAdding={true}\n                        useIcons={true}/>\n\n                    <Column dataField={'id'} caption={'id'} width={50} visible={false}/>\n                    <Column dataField={'title'} caption={'Наименование ученого звания'}/>\n\n                </DataGrid>\n            </div>\n        )\n    }\n}","export const indexCathedra = [{\n    'id': 1,\n    'CathedraName': 'Кафедра Металлургии цветных металлов',\n    'CathedraIndex': 1,\n    'Period': '2018-2019'\n}, {\n    'id': 2,\n    'CathedraName': 'Кафедра вычислительной техники',\n    'CathedraIndex': 2,\n    'Period': '2018-2019'\n}, {\n    'id': 3,\n    'CathedraName': 'Кафедра Химических технологий',\n    'CathedraIndex': 1001,\n    'Period': '2018-2019'\n}, {\n    'id': 4,\n    'CathedraName': 'Отделение общефизической подготовки',\n    'CathedraIndex': 1364,\n    'Period': '2018-2019'\n}, {\n    'id': 5,\n    'CathedraName': 'Кафедра Автоматизированных систем',\n    'CathedraIndex': 1298,\n    'Period': '2018-2019'\n}, {\n    'id': 6,\n    'CathedraName': 'Кафедра Информационной безопасности',\n    'CathedraIndex': 1325,\n    'Period': '2018-2019'\n}, {\n    'id': 7,\n    'CathedraName': 'Отделение женской гимнастики',\n    'CathedraIndex': 1334,\n    'Period': '2018-2019'\n}];\n\nexport default {\n    getCathIndex() {\n        return indexCathedra\n    }\n\n}","import React, {Component} from \"react\";\nimport DataGrid, {Column, FilterRow, HeaderFilter} from \"devextreme-react/data-grid\"\nimport service from \"./data\";\n\nexport default class IndexCathedra extends Component {\n\n    constructor(props) {\n        super(props);\n        this.indexCathedra = service.getCathIndex();\n        this.applyFilterTypes = [{\n            key: 'auto',\n            name: 'Immediately'\n        }, {\n            key: 'onClick',\n            name: 'On Button Click'\n        }];\n        this.saleAmountHeaderFilter = [{\n            text: 'Less than $3000',\n            value: ['SaleAmount', '<', 3000]\n        }, {\n            text: '$3000 - $5000',\n            value: [\n                ['SaleAmount', '>=', 3000],\n                ['SaleAmount', '<', 5000]\n            ]\n        }, {\n            text: '$5000 - $10000',\n            value: [\n                ['SaleAmount', '>=', 5000],\n                ['SaleAmount', '<', 10000]\n            ]\n        }, {\n            text: '$10000 - $20000',\n            value: [\n                ['SaleAmount', '>=', 10000],\n                ['SaleAmount', '<', 20000]\n            ]\n        }, {\n            text: 'Greater than $20000',\n            value: ['SaleAmount', '>=', 20000]\n        }];\n        this.state = {\n            showFilterRow: true,\n            showHeaderFilter: true,\n            currentFilter: this.applyFilterTypes[0].key\n        };\n        this.dataGrid = null;\n        this.orderHeaderFilter = this.orderHeaderFilter.bind(this);\n        this.onShowFilterRowChanged = this.onShowFilterRowChanged.bind(this);\n        this.onShowHeaderFilterChanged = this.onShowHeaderFilterChanged.bind(this);\n        this.onCurrentFilterChanged = this.onCurrentFilterChanged.bind(this);\n    }\n    orderHeaderFilter(data) {\n        data.dataSource.postProcess = (results) => {\n            results.push({\n                text: 'Weekends',\n                value: 'weekends'\n            });\n            return results;\n        };\n    }\n    onShowFilterRowChanged(e) {\n        this.setState({\n            showFilterRow: e.value\n        });\n        this.clearFilter();\n    }\n    onShowHeaderFilterChanged(e) {\n        this.setState({\n            showHeaderFilter: e.value\n        });\n        this.clearFilter();\n    }\n    onCurrentFilterChanged(e) {\n        this.setState({\n            currentFilter: e.value\n        });\n    }\n    clearFilter() {\n        this.dataGrid.instance.clearFilter();\n    }\n\n    render() {\n        return (\n            <div style={{margin: \"auto\", width: \"60%\", marginTop: \"100px\"}}>\n                <h1 style={{textAlign: \"center\", marginBottom: \"30px\"}}>Индексы публикационной активности по\n                    кафедрам</h1>\n                <DataGrid\n                    id={'grid'}\n                    dataSource={this.indexCathedra}\n                    showBorders={true}>\n                    <FilterRow visible={this.state.showFilterRow}\n                               applyFilter={this.state.currentFilter} />\n                    <HeaderFilter visible={this.state.showHeaderFilter} />\n                    <Column dataField={'id'} visible={false}/>\n                    <Column dataField={'CathedraName'} caption={'Наименование кафедры'}/>\n                    <Column dataField={'CathedraIndex'} caption={'Индекс ПА кафедры'}/>\n                    <Column dataField={'Period'} caption={'Отчетный период'} alignment={'center'}/>\n                </DataGrid>\n            </div>\n        )\n    }\n}","export const indexEmp = [{\n    'id': 1,\n    'EmpName': 'Иванов Иван Иванович',\n    'EmpIndex': 143,\n    'Period': '2018-2019'\n}, {\n    'id': 2,\n    'EmpName': 'Сидоров Петр Валерьевич',\n    'EmpIndex': 28,\n    'Period': '2019-2020'\n}, {\n    'id': 3,\n    'EmpName': 'Тарасов Сергей Викторович',\n    'EmpIndex': 561,\n    'Period': '2018-2019'\n}, {\n    'id': 4,\n    'EmpName': 'Аммосова Юлия Владимировна',\n    'EmpIndex': 37,\n    'Period': '2018-2019'\n}, {\n    'id': 5,\n    'EmpName': 'Машукова Наталия Дмитриевна',\n    'EmpIndex': 127,\n    'Period': '2019-2020'\n}, {\n    'id': 6,\n    'EmpName': 'Новосельцев Артем Геннадьевич',\n    'EmpIndex': 203,\n    'Period': '2018-2019'\n}, {\n    'id': 7,\n    'EmpName': 'Медведев Николай Олегович',\n    'EmpIndex': 237,\n    'Period': '2018-2019'\n}];\n\nexport default {\n    getEmpIndex() {\n        return indexEmp;\n    }\n};","import React, {Component} from \"react\";\nimport DataGrid, {Column, FilterRow, HeaderFilter} from \"devextreme-react/data-grid\";\nimport service from \"./data\";\n\nexport default class IndexEmployees extends Component {\n\n    constructor(props) {\n        super(props);\n        this.indexEmployees = service.getEmpIndex();\n        this.applyFilterTypes = [{\n            key: 'auto',\n            name: 'Immediately'\n        }, {\n            key: 'onClick',\n            name: 'On Button Click'\n        }];\n        this.saleAmountHeaderFilter = [{\n            text: 'Less than $3000',\n            value: ['SaleAmount', '<', 3000]\n        }, {\n            text: '$3000 - $5000',\n            value: [\n                ['SaleAmount', '>=', 3000],\n                ['SaleAmount', '<', 5000]\n            ]\n        }, {\n            text: '$5000 - $10000',\n            value: [\n                ['SaleAmount', '>=', 5000],\n                ['SaleAmount', '<', 10000]\n            ]\n        }, {\n            text: '$10000 - $20000',\n            value: [\n                ['SaleAmount', '>=', 10000],\n                ['SaleAmount', '<', 20000]\n            ]\n        }, {\n            text: 'Greater than $20000',\n            value: ['SaleAmount', '>=', 20000]\n        }];\n        this.state = {\n            showFilterRow: true,\n            showHeaderFilter: true,\n            currentFilter: this.applyFilterTypes[0].key\n        };\n        this.dataGrid = null;\n        this.orderHeaderFilter = this.orderHeaderFilter.bind(this);\n        this.onShowFilterRowChanged = this.onShowFilterRowChanged.bind(this);\n        this.onShowHeaderFilterChanged = this.onShowHeaderFilterChanged.bind(this);\n        this.onCurrentFilterChanged = this.onCurrentFilterChanged.bind(this);\n    }\n    orderHeaderFilter(data) {\n        data.dataSource.postProcess = (results) => {\n            results.push({\n                text: 'Weekends',\n                value: 'weekends'\n            });\n            return results;\n        };\n    }\n    onShowFilterRowChanged(e) {\n        this.setState({\n            showFilterRow: e.value\n        });\n        this.clearFilter();\n    }\n    onShowHeaderFilterChanged(e) {\n        this.setState({\n            showHeaderFilter: e.value\n        });\n        this.clearFilter();\n    }\n    onCurrentFilterChanged(e) {\n        this.setState({\n            currentFilter: e.value\n        });\n    }\n    clearFilter() {\n        this.dataGrid.instance.clearFilter();\n    }\n\n    render() {\n        return (\n            <div style={{margin: \"auto\", width: \"60%\", marginTop: \"100px\"}}>\n                <h1 style={{textAlign: \"center\", marginBottom: \"30px\"}}>Индексы публикационной активности</h1>\n                <DataGrid\n                    id={'grid'}\n                    dataSource={this.indexEmployees}\n                    showBorders={true}>\n                    <FilterRow visible={this.state.showFilterRow}\n                               applyFilter={this.state.currentFilter} />\n                    <HeaderFilter visible={this.state.showHeaderFilter} />\n                    <Column dataField={'id'} visible={false}/>\n                    <Column dataField={'EmpName'} caption={'ФИО преподавателя'}/>\n                    <Column dataField={'EmpIndex'} caption={'Индекс ПА преподавателя'}/>\n                    <Column dataField={'Period'} caption={'Отчетный период'} alignment={'center'}/>\n                </DataGrid>\n            </div>\n        )\n    }\n}","export const indexInst = [{\n    'id': 1,\n    'InstituteName': 'Институт Высоких Технологий',\n    'InstituteIndex': 6707,\n    'Period': '2018-2019'\n}, {\n    'id': 2,\n    'InstituteName': 'Институт Информационных Технологий и Анализа Данных',\n    'InstituteIndex': 5203,\n    'Period': '2018-2019'\n}, {\n    'id': 3,\n    'InstituteName': 'Кафедра Физической Культуры',\n    'InstituteIndex': 6131,\n    'Period': '2018-2019'\n}, {\n    'id': 4,\n    'InstituteName': 'Институт Экономики Права и Управления',\n    'InstituteIndex': 5673,\n    'Period': '2018-2019'\n}, {\n    'id': 5,\n    'InstituteName': 'Институт Недропользования',\n    'InstituteIndex': 6342,\n    'Period': '2019-2020'\n}];\n\nexport default {\n    getInstituteIndex() {\n        return indexInst;\n    }\n};","import React, {Component} from 'react'\nimport DataGrid, {Column, FilterRow, HeaderFilter} from \"devextreme-react/data-grid\";\nimport service from \"./data\";\n\nexport default class IndexInstitute extends Component {\n\n    constructor(props) {\n        super(props);\n        this.indexInstitue = service.getInstituteIndex();\n        this.applyFilterTypes = [{\n            key: 'auto',\n            name: 'Immediately'\n        }, {\n            key: 'onClick',\n            name: 'On Button Click'\n        }];\n        this.saleAmountHeaderFilter = [{\n            text: 'Less than $3000',\n            value: ['SaleAmount', '<', 3000]\n        }, {\n            text: '$3000 - $5000',\n            value: [\n                ['SaleAmount', '>=', 3000],\n                ['SaleAmount', '<', 5000]\n            ]\n        }, {\n            text: '$5000 - $10000',\n            value: [\n                ['SaleAmount', '>=', 5000],\n                ['SaleAmount', '<', 10000]\n            ]\n        }, {\n            text: '$10000 - $20000',\n            value: [\n                ['SaleAmount', '>=', 10000],\n                ['SaleAmount', '<', 20000]\n            ]\n        }, {\n            text: 'Greater than $20000',\n            value: ['SaleAmount', '>=', 20000]\n        }];\n        this.state = {\n            showFilterRow: true,\n            showHeaderFilter: true,\n            currentFilter: this.applyFilterTypes[0].key\n        };\n        this.dataGrid = null;\n        this.orderHeaderFilter = this.orderHeaderFilter.bind(this);\n        this.onShowFilterRowChanged = this.onShowFilterRowChanged.bind(this);\n        this.onShowHeaderFilterChanged = this.onShowHeaderFilterChanged.bind(this);\n        this.onCurrentFilterChanged = this.onCurrentFilterChanged.bind(this);\n    }\n    orderHeaderFilter(data) {\n        data.dataSource.postProcess = (results) => {\n            results.push({\n                text: 'Weekends',\n                value: 'weekends'\n            });\n            return results;\n        };\n    }\n    onShowFilterRowChanged(e) {\n        this.setState({\n            showFilterRow: e.value\n        });\n        this.clearFilter();\n    }\n    onShowHeaderFilterChanged(e) {\n        this.setState({\n            showHeaderFilter: e.value\n        });\n        this.clearFilter();\n    }\n    onCurrentFilterChanged(e) {\n        this.setState({\n            currentFilter: e.value\n        });\n    }\n    clearFilter() {\n        this.dataGrid.instance.clearFilter();\n    }\n\n    render() {\n        return (\n            <div style={{margin: \"auto\", width: \"60%\", marginTop: \"100px\"}}>\n                <h1 style={{textAlign: \"center\", marginBottom: \"30px\"}}>Индексы публикационной активности по\n                    кафедрам</h1>\n                <DataGrid\n                    id={'grid'}\n                    dataSource={this.indexInstitue}\n                    showBorders={true}>\n                    <Column dataField={'id'} visible={false}/>\n                    <FilterRow visible={this.state.showFilterRow}\n                               applyFilter={this.state.currentFilter} />\n                    <HeaderFilter visible={this.state.showHeaderFilter} />\n                    <Column dataField={'InstituteName'} caption={'Наименование института'} width={750}/>\n                    <Column dataField={'InstituteIndex'} caption={'Индекс ПА института'}/>\n                    <Column dataField={'Period'} caption={'Отчетный период'} alignment={'center'}/>\n                </DataGrid>\n            </div>\n        )\n    }\n}","export const addExisting = [{\n    'id': 1,\n    'FIO': 'Иванов Петр Федорович'\n}]","import React, {Component} from 'react'\nimport DataGrid, {\n    Column,\n    Editing,\n    Popup,\n    Paging,\n    Position,\n    Form\n} from \"devextreme-react/data-grid\";\nimport {Item} from 'devextreme-react/form';\nimport {addExisting} from \"./data\";\n\nexport default class Existing extends Component {\n    render() {\n        return (\n            <div style={{margin: \"auto\", width: \"60%\", marginTop: \"100px\"}}>\n                <h1 style={{textAlign: \"center\", marginBottom: \"30px\"}}>Добавление показателей публикационной активности\n                    для существующего сотрудника</h1>\n\n                <DataGrid\n                    id={'gridContainer'}\n                    dataSource={addExisting}\n                    keyExpr={'id'}\n                    allowColumnReordering={true}\n                    showBorders={true}\n                    onEditingStart={this.onEditingStart}\n                    onInitNewRow={this.onInitNewRow}\n                    onRowInserting={this.onRowInserting}\n                    onRowInserted={this.onRowInserted}\n                    onRowUpdating={this.onRowUpdating}\n                    onRowUpdated={this.onRowUpdated}\n                    onRowRemoving={this.onRowRemoving}\n                    onRowRemoved={this.onRowRemoved}>\n\n                    <Paging enabled={true}/>\n                    <Editing\n                        mode={'popup'}\n                        allowUpdating={true}\n                        allowDeleting={true}\n                        allowAdding={true}\n                        useIcons={true}\n                    >\n                        <Popup title={'Добавить показатели публикационной активности'} showTitle={true} width={900} height={525}>\n                            <Position my={'center'} at={'center'} of={window}/>\n                        </Popup>\n                        <Form>\n                            <Item itemType={'group'} colCount={1} colSpan={2}>\n                                <Item dataField={'FIO'}/>\n                                <Item dataField={'pubElibrary'}/>\n                                <Item dataField={'pubRinc'}/>\n                                <Item dataField={'pubRincCore'}/>\n                                <Item dataField={'pubForeignJournals'}/>\n                                <Item dataField={'pubRusJournals'}/>\n                                <Item dataField={'pubRusVakJournals'}/>\n                                <Item dataField={'pubRusTranslateJournals'}/>\n                                <Item dataField={'pubNotNullImpact'}/>\n                                <Item dataField={'pubLastFiveYears'}/>\n                                <Item dataField={'pubMiddleImpactFactor'}/>\n                                <Item dataField={'pubQuantityMonography'}/>\n                                <Item dataField={'pubScopus'}/>\n                                <Item dataField={'pubWos'}/>\n                                <Item dataField={'citElibrary'}/>\n                                <Item dataField={'citRinc'}/>\n                                <Item dataField={'citRincCore'}/>\n                                <Item dataField={'citPubCitAuthor'}/>\n                                <Item dataField={'citRefMostCit'}/>\n                                <Item dataField={'citPubCitEvenOnce'}/>\n                                <Item dataField={'citMiddleQuantityForOnePub'}/>\n                                <Item dataField={'citSelfCit'}/>\n                                <Item dataField={'citQuantityCitByCoAuthor'}/>\n                                <Item dataField={'citQuantityCoAuthor'}/>\n                                <Item dataField={'citForeignJournals'}/>\n                                <Item dataField={'citRusJournals'}/>\n                                <Item dataField={'citRusVakJournals'}/>\n                                <Item dataField={'cirRusTranslateJournals'}/>\n                                <Item dataField={'citQuantityFromJournalsNotNullImpact'}/>\n                                <Item dataField={'citMiddleImpact'}/>\n                                <Item dataField={'citQuantityCitPubInLastFiveYears'}/>\n                                <Item dataField={'citQuantityAllPubLastFiveYears'}/>\n                                <Item dataField={'citScopus'}/>\n                                <Item dataField={'citWos'}/>\n                                <Item dataField={'hirshElibrary'}/>\n                                <Item dataField={'hirshRinc'}/>\n                                <Item dataField={'hirshRincCore'}/>\n                                <Item dataField={'hirshWithoutSelfCit'}/>\n                                <Item dataField={'hirshOnlyFromPubInJournals'}/>\n                                <Item dataField={'hirshScopus'}/>\n                                <Item dataField={'hirshWos'}/>\n\n                            </Item>\n                        </Form>\n                    </Editing>\n\n                    <Column dataField={'id'} caption={'id'} width={50} visible={false}/>\n                    <Column dataField={'FIO'} caption={'ФИО сотрудника'}/>\n                    <Column dataField={'pubElibrary'} caption={'Число публикаций на elibrary.ru'} visible={false}/>\n                    <Column dataField={'pubRinc'} caption={'Число публикаций в ринц'} visible={false}/>\n                    <Column dataField={'pubRincCore'} caption={'Число публикаций, входящих в ядро ринц'}\n                            visible={false}/>\n                    <Column dataField={'pubForeignJournals'} caption={'Число статей в зарубежных журналах'}\n                            visible={false}/>\n                    <Column dataField={'pubRusJournals'} caption={'Число статей в российских журналах'}\n                            visible={false}/>\n                    <Column dataField={'pubRusVakJournals'}\n                            caption={'Число статей в российских журналах из перечня вак'} visible={false}/>\n                    <Column dataField={'pubRusTranslateJournals'}\n                            caption={'Число статей в российских переводных журналах'} visible={false}/>\n                    <Column dataField={'pubNotNullImpact'}\n                            caption={'Число статей в журналах с ненулевым импакт-фактором'} visible={false}/>\n                    <Column dataField={'pubLastFiveYears'} caption={'Число публикаций за последние пять лет'}\n                            visible={false}/>\n                    <Column dataField={'pubMiddleImpactFactor'}\n                            caption={'Средневзвешенный импакт-фактор журналов, в которых были опубликованы статьи'}\n                            visible={false}/>\n                    <Column dataField={'pubQuantityMonography'} caption={'Количество монографий'} visible={false}/>\n                    <Column dataField={'pubScopus'} caption={'Количество публикаций автора из базы данных scopus'}\n                            visible={false}/>\n                    <Column dataField={'pubWos'} caption={'Количество публикаций автора из базы данных web of science'}\n                            visible={false}/>\n                    <Column dataField={'citElibrary'} caption={'Число цитирований из публикаций на elibrary.ru'}\n                            visible={false}/>\n                    <Column dataField={'citRinc'} caption={'Число цитирований из публикаций, входящих в ринц'}\n                            visible={false}/>\n                    <Column dataField={'citRincCore'} caption={'Число цитирований из публикаций, входящих в ядро ринц'}\n                            visible={false}/>\n                    <Column dataField={'citPubCitAuthor'} caption={'Число публикаций, процитировавших работы автора'}\n                            visible={false}/>\n                    <Column dataField={'citRefMostCit'} caption={'Число ссылок на самую цитируемую публикацию'}\n                            visible={false}/>\n                    <Column dataField={'citPubCitEvenOnce'}\n                            caption={'Число публикаций автора, процитированных хотя бы один раз'} visible={false}/>\n                    <Column dataField={'citMiddleQuantityForOnePub'}\n                            caption={'Среднее число цитирований в расчете на одну публикацию'} visible={false}/>\n                    <Column dataField={'citSelfCit'} caption={'Число самоцитирований'} visible={false}/>\n                    <Column dataField={'citQuantityCitByCoAuthor'} caption={'Число цитирований соавторами'}\n                            visible={false}/>\n                    <Column dataField={'citQuantityCoAuthor'} caption={'Число соавторов'} visible={false}/>\n                    <Column dataField={'citForeignJournals'} caption={'Число цитирований из зарубежных журналов'}\n                            visible={false}/>\n                    <Column dataField={'citRusJournals'} caption={'Число цитирований из российских журналов'}\n                            visible={false}/>\n                    <Column dataField={'citRusVakJournals'}\n                            caption={'Число цитирований из российских журналов из перечня вак'} visible={false}/>\n                    <Column dataField={'cirRusTranslateJournals'}\n                            caption={'Число цитирований из российских переводных журналов'} visible={false}/>\n                    <Column dataField={'citQuantityFromJournalsNotNullImpact'}\n                            caption={'Число цитирований из журналов с ненулевым импакт-фактором (в процентах)'}\n                            visible={false}/>\n                    <Column dataField={'citMiddleImpact'}\n                            caption={'Средневзвешенный импакт-фактор журналов, в которых были процитированы статьи'}\n                            visible={false}/>\n                    <Column dataField={'citQuantityCitPubInLastFiveYears'}\n                            caption={'Число цитирований работ автора, опубликованных за последние пять лет'}\n                            visible={false}/>\n                    <Column dataField={'citQuantityAllPubLastFiveYears'}\n                            caption={'Число цитирований публикаций автора из всех публикаций за последние пять лет'}\n                            visible={false}/>\n                    <Column dataField={'citScopus'} caption={'Количество цитирований авторами из базы данных scopus'}\n                            visible={false}/>\n                    <Column dataField={'citWos'}\n                            caption={'Количество цитирований авторами из базы данных web of science'} visible={false}/>\n                    <Column dataField={'hirshElibrary'} caption={'Индекс хирша по всем публикациям на elibrary.ru'}\n                            visible={false}/>\n                    <Column dataField={'hirshRinc'} caption={'Индекс хирша по публикациям в ринц'} visible={false}/>\n                    <Column dataField={'hirshRincCore'} caption={'Индекс хирша по ядру ринц'} visible={false}/>\n                    <Column dataField={'hirshWithoutSelfCit'} caption={'Индекс хирша без учета самоцитирований'}\n                            visible={false}/>\n                    <Column dataField={'hirshOnlyFromPubInJournals'}\n                            caption={'Индекс хирша с учетом только статей в журналах'} visible={false}/>\n                    <Column dataField={'hirshScopus'} caption={'Индекс хирша автора из базы данных scopus'}\n                            visible={false}/>\n                    <Column dataField={'hirshWos'} caption={'Индекс хирша автора из базы данных web of science'}\n                            visible={false}/>\n                </DataGrid>\n            </div>\n        )\n    }\n}","export const addNew = [{\n    'id': 1,\n    'FIO': 'Иванов Петр Федорович'\n}]","import React, {Component} from 'react'\nimport DataGrid, {\n    Column,\n    Editing,\n    Popup,\n    Paging,\n    Position,\n    Form\n} from \"devextreme-react/data-grid\";\nimport {Item} from 'devextreme-react/form';\nimport {addNew} from \"./data\";\n\nexport default class New extends Component {\n    render() {\n        return (\n            <div style={{margin: \"auto\", width: \"60%\", marginTop: \"100px\"}}>\n                <h1 style={{textAlign: \"center\", marginBottom: \"30px\"}}>Добавление показателей публикационной активности\n                    для нового сотрудника</h1>\n\n                <DataGrid\n                    id={'gridContainer'}\n                    dataSource={addNew}\n                    keyExpr={'id'}\n                    allowColumnReordering={true}\n                    showBorders={true}\n                    onEditingStart={this.onEditingStart}\n                    onInitNewRow={this.onInitNewRow}\n                    onRowInserting={this.onRowInserting}\n                    onRowInserted={this.onRowInserted}\n                    onRowUpdating={this.onRowUpdating}\n                    onRowUpdated={this.onRowUpdated}\n                    onRowRemoving={this.onRowRemoving}\n                    onRowRemoved={this.onRowRemoved}>\n\n                    <Paging enabled={true}/>\n                    <Editing\n                        mode={'popup'}\n                        allowUpdating={true}\n                        allowDeleting={true}\n                        allowAdding={true}\n                        useIcons={true}\n                    >\n                        <Popup title={'Добавить показатели публикационной активности'} showTitle={true} width={900} height={525}>\n                            <Position my={'center'} at={'center'} of={window}/>\n                        </Popup>\n                        <Form>\n                            <Item itemType={'group'} colCount={1} colSpan={2}>\n                                <Item dataField={'FIO'}/>\n                                <Item dataField={'pubElibrary'}/>\n                                <Item dataField={'pubRinc'}/>\n                                <Item dataField={'pubRincCore'}/>\n                                <Item dataField={'pubForeignJournals'}/>\n                                <Item dataField={'pubRusJournals'}/>\n                                <Item dataField={'pubRusVakJournals'}/>\n                                <Item dataField={'pubRusTranslateJournals'}/>\n                                <Item dataField={'pubNotNullImpact'}/>\n                                <Item dataField={'pubLastFiveYears'}/>\n                                <Item dataField={'pubMiddleImpactFactor'}/>\n                                <Item dataField={'pubQuantityMonography'}/>\n                                <Item dataField={'pubScopus'}/>\n                                <Item dataField={'pubWos'}/>\n                                <Item dataField={'citElibrary'}/>\n                                <Item dataField={'citRinc'}/>\n                                <Item dataField={'citRincCore'}/>\n                                <Item dataField={'citPubCitAuthor'}/>\n                                <Item dataField={'citRefMostCit'}/>\n                                <Item dataField={'citPubCitEvenOnce'}/>\n                                <Item dataField={'citMiddleQuantityForOnePub'}/>\n                                <Item dataField={'citSelfCit'}/>\n                                <Item dataField={'citQuantityCitByCoAuthor'}/>\n                                <Item dataField={'citQuantityCoAuthor'}/>\n                                <Item dataField={'citForeignJournals'}/>\n                                <Item dataField={'citRusJournals'}/>\n                                <Item dataField={'citRusVakJournals'}/>\n                                <Item dataField={'cirRusTranslateJournals'}/>\n                                <Item dataField={'citQuantityFromJournalsNotNullImpact'}/>\n                                <Item dataField={'citMiddleImpact'}/>\n                                <Item dataField={'citQuantityCitPubInLastFiveYears'}/>\n                                <Item dataField={'citQuantityAllPubLastFiveYears'}/>\n                                <Item dataField={'citScopus'}/>\n                                <Item dataField={'citWos'}/>\n                                <Item dataField={'hirshElibrary'}/>\n                                <Item dataField={'hirshRinc'}/>\n                                <Item dataField={'hirshRincCore'}/>\n                                <Item dataField={'hirshWithoutSelfCit'}/>\n                                <Item dataField={'hirshOnlyFromPubInJournals'}/>\n                                <Item dataField={'hirshScopus'}/>\n                                <Item dataField={'hirshWos'}/>\n\n                            </Item>\n                        </Form>\n                    </Editing>\n\n                    <Column dataField={'id'} caption={'id'} width={50} visible={false}/>\n                    <Column dataField={'FIO'} caption={'ФИО сотрудника'}/>\n                    <Column dataField={'pubElibrary'} caption={'Число публикаций на elibrary.ru'} visible={false}/>\n                    <Column dataField={'pubRinc'} caption={'Число публикаций в ринц'} visible={false}/>\n                    <Column dataField={'pubRincCore'} caption={'Число публикаций, входящих в ядро ринц'}\n                            visible={false}/>\n                    <Column dataField={'pubForeignJournals'} caption={'Число статей в зарубежных журналах'}\n                            visible={false}/>\n                    <Column dataField={'pubRusJournals'} caption={'Число статей в российских журналах'}\n                            visible={false}/>\n                    <Column dataField={'pubRusVakJournals'}\n                            caption={'Число статей в российских журналах из перечня вак'} visible={false}/>\n                    <Column dataField={'pubRusTranslateJournals'}\n                            caption={'Число статей в российских переводных журналах'} visible={false}/>\n                    <Column dataField={'pubNotNullImpact'}\n                            caption={'Число статей в журналах с ненулевым импакт-фактором'} visible={false}/>\n                    <Column dataField={'pubLastFiveYears'} caption={'Число публикаций за последние пять лет'}\n                            visible={false}/>\n                    <Column dataField={'pubMiddleImpactFactor'}\n                            caption={'Средневзвешенный импакт-фактор журналов, в которых были опубликованы статьи'}\n                            visible={false}/>\n                    <Column dataField={'pubQuantityMonography'} caption={'Количество монографий'} visible={false}/>\n                    <Column dataField={'pubScopus'} caption={'Количество публикаций автора из базы данных scopus'}\n                            visible={false}/>\n                    <Column dataField={'pubWos'} caption={'Количество публикаций автора из базы данных web of science'}\n                            visible={false}/>\n                    <Column dataField={'citElibrary'} caption={'Число цитирований из публикаций на elibrary.ru'}\n                            visible={false}/>\n                    <Column dataField={'citRinc'} caption={'Число цитирований из публикаций, входящих в ринц'}\n                            visible={false}/>\n                    <Column dataField={'citRincCore'} caption={'Число цитирований из публикаций, входящих в ядро ринц'}\n                            visible={false}/>\n                    <Column dataField={'citPubCitAuthor'} caption={'Число публикаций, процитировавших работы автора'}\n                            visible={false}/>\n                    <Column dataField={'citRefMostCit'} caption={'Число ссылок на самую цитируемую публикацию'}\n                            visible={false}/>\n                    <Column dataField={'citPubCitEvenOnce'}\n                            caption={'Число публикаций автора, процитированных хотя бы один раз'} visible={false}/>\n                    <Column dataField={'citMiddleQuantityForOnePub'}\n                            caption={'Среднее число цитирований в расчете на одну публикацию'} visible={false}/>\n                    <Column dataField={'citSelfCit'} caption={'Число самоцитирований'} visible={false}/>\n                    <Column dataField={'citQuantityCitByCoAuthor'} caption={'Число цитирований соавторами'}\n                            visible={false}/>\n                    <Column dataField={'citQuantityCoAuthor'} caption={'Число соавторов'} visible={false}/>\n                    <Column dataField={'citForeignJournals'} caption={'Число цитирований из зарубежных журналов'}\n                            visible={false}/>\n                    <Column dataField={'citRusJournals'} caption={'Число цитирований из российских журналов'}\n                            visible={false}/>\n                    <Column dataField={'citRusVakJournals'}\n                            caption={'Число цитирований из российских журналов из перечня вак'} visible={false}/>\n                    <Column dataField={'cirRusTranslateJournals'}\n                            caption={'Число цитирований из российских переводных журналов'} visible={false}/>\n                    <Column dataField={'citQuantityFromJournalsNotNullImpact'}\n                            caption={'Число цитирований из журналов с ненулевым импакт-фактором (в процентах)'}\n                            visible={false}/>\n                    <Column dataField={'citMiddleImpact'}\n                            caption={'Средневзвешенный импакт-фактор журналов, в которых были процитированы статьи'}\n                            visible={false}/>\n                    <Column dataField={'citQuantityCitPubInLastFiveYears'}\n                            caption={'Число цитирований работ автора, опубликованных за последние пять лет'}\n                            visible={false}/>\n                    <Column dataField={'citQuantityAllPubLastFiveYears'}\n                            caption={'Число цитирований публикаций автора из всех публикаций за последние пять лет'}\n                            visible={false}/>\n                    <Column dataField={'citScopus'} caption={'Количество цитирований авторами из базы данных scopus'}\n                            visible={false}/>\n                    <Column dataField={'citWos'}\n                            caption={'Количество цитирований авторами из базы данных web of science'} visible={false}/>\n                    <Column dataField={'hirshElibrary'} caption={'Индекс хирша по всем публикациям на elibrary.ru'}\n                            visible={false}/>\n                    <Column dataField={'hirshRinc'} caption={'Индекс хирша по публикациям в ринц'} visible={false}/>\n                    <Column dataField={'hirshRincCore'} caption={'Индекс хирша по ядру ринц'} visible={false}/>\n                    <Column dataField={'hirshWithoutSelfCit'} caption={'Индекс хирша без учета самоцитирований'}\n                            visible={false}/>\n                    <Column dataField={'hirshOnlyFromPubInJournals'}\n                            caption={'Индекс хирша с учетом только статей в журналах'} visible={false}/>\n                    <Column dataField={'hirshScopus'} caption={'Индекс хирша автора из базы данных scopus'}\n                            visible={false}/>\n                    <Column dataField={'hirshWos'} caption={'Индекс хирша автора из базы данных web of science'}\n                            visible={false}/>\n                </DataGrid>\n            </div>\n        )\n    }\n}","import 'devextreme/dist/css/dx.common.css';\nimport 'devextreme/dist/css/dx.light.css';\nimport React, {Component} from 'react';\n\nimport './App.css'\nimport {Route} from 'react-router-dom'\nimport Navigation from \"./components/Navigation\";\nimport Institute from \"./components/Thesaurus/Institute/Institute\";\nimport Cathedra from \"./components/Thesaurus/Cathedra/Cathedra\";\nimport Degree from \"./components/Thesaurus/Degree/Degree\";\nimport Employees from \"./components/Thesaurus/Employees/Employees\";\nimport Post from \"./components/Thesaurus/Post/Post\";\nimport Title from \"./components/Thesaurus/Title/Title\";\nimport IndexCathedra from \"./components/Index/IndexCathedra/IndexCathedra\";\nimport IndexEmployees from \"./components/Index/IndexEmployees/IndexEmployees\";\nimport IndexInstitute from \"./components/Index/IndexInstitute/IndexInstitute\";\nimport Existing from \"./components/Add/Existing/Existing\";\nimport New from \"./components/Add/New/New\";\n\nexport default class App extends Component {\n    render() {\n        return (\n            <div>\n\n                <Navigation/>\n\n                {/*Роутинг добавления показателей*/}\n                <Route path=\"/add/new\" component={New}/>\n                <Route path=\"/add/existing\" component={Existing}/>\n\n                {/*Роутинг просмотра индексов публикационной активности*/}\n                <Route path=\"/index/indexcathedra\" component={IndexCathedra}/>\n                <Route path=\"/index/indexemployees\" component={IndexEmployees}/>\n                <Route path=\"/index/indexinstitute\" component={IndexInstitute}/>\n\n                {/*Роутинг справочников*/}\n                <Route path=\"/thesaurus/cathedra\" component={Cathedra}/>\n                <Route path=\"/thesaurus/institute\" component={Institute}/>\n                <Route path=\"/thesaurus/degree\" component={Degree}/>\n                <Route path=\"/thesaurus/employees\" component={Employees}/>\n                <Route path=\"/thesaurus/post\" component={Post}/>\n                <Route path=\"/thesaurus/title\" component={Title}/>\n\n            </div>\n        );\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from \"./App\";\nimport {BrowserRouter} from 'react-router-dom'\n\nconst app = (\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n)\n\nReactDOM.render(app,document.getElementById(\"root\")\n)\n"],"sourceRoot":""}